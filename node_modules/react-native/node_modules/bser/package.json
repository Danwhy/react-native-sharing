{
  "name": "bser",
  "version": "1.0.0",
  "description": "JavaScript implementation of the BSER Binary Protocol",
  "main": "index.js",
  "directories": {
    "test": "test"
  },
  "scripts": {
    "test": "node test/bser.js"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/facebook/bser.js"
  },
  "keywords": [
    "bser",
    "binary",
    "protocol"
  ],
  "author": {
    "name": "wez"
  },
  "license": "BSD-2-Clause",
  "bugs": {
    "url": "https://github.com/facebook/bser.js/issues"
  },
  "homepage": "https://github.com/facebook/bser.js",
  "dependencies": {
    "node-int64": "^0.4.0"
  },
  "readme": "# BSER Binary Protocol\n\nFor more details about the protocol see [Watchman's docs](https://facebook.github.io/watchman/docs/bser.html).\n\n## API\n\n```js\nvar bser = require('bser');\n```\n\n### Buffer\n\n#### Create\n\n```js\nvar bunser = new bser.BunserBuf();\n```\n\n#### Append\n\n```js\nbunser.append(buf);\n```\n\n#### Read\n\n```js\nbunser.on('value', function(obj) {\n  console.log(obj);\n});\n```\n\n#### Dump\n\n```js\nbser.dumpToBuffer(obj);\n```\n\n## Example\n\nRead BSER from socket:\n\n```js\nvar bunser = new bser.BunserBuf();\n\nbunser.on('value', function(obj) {\n  console.log('data from socket', obj);\t\t   \n});\n\nvar socket = net.connect('/socket');\n\nsocket.on('data', function(buf) {\n  bunser.append(buf);\n});\n```\n\nWrite BSER to socket:\n\n```js\nsocket.write(bser.dumpToBuffer(obj));\n```\n",
  "readmeFilename": "README.md",
  "_id": "bser@1.0.0",
  "_shasum": "380ce5c7c2efe37723eb6cbe0a4ad871e7119d01",
  "_resolved": "https://registry.npmjs.org/bser/-/bser-1.0.0.tgz",
  "_from": "bser@1.0.0"
}
